rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Función para verificar si el usuario está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Función para verificar el rol del usuario
    function hasRole(role) {
      return isAuthenticated() && 
             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.role == role;
    }
    
    // Función para verificar si el usuario es administrador
    function isAdmin() {
      return hasRole('admin');
    }
    
    // Función para verificar si el usuario es coordinador
    function isCoordinator() {
      return hasRole('coordinator');
    }
    
    // Función para verificar si el usuario es empleado
    function isEmployee() {
      return hasRole('employee');
    }
    
    // Función para verificar si el usuario es propietario del documento
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Reglas para la colección de usuarios
    match /users/{userId} {
      // Solo administradores pueden listar y crear usuarios
      // Cada usuario puede leer su propio documento
      allow read: if isAdmin() || isOwner(userId);
      allow create: if isAdmin();
      allow update: if isAdmin() || (isOwner(userId) && 
                                     !('role' in request.resource.data) && 
                                     request.resource.data.role == resource.data.role);
      allow delete: if isAdmin();
    }
    
    // Reglas para la colección de menús
    match /menus/{menuId} {
      // Administradores pueden hacer todo
      // Coordinadores pueden leer
      // Empleados pueden leer menús publicados
      allow read: if isAdmin() || isCoordinator() || 
                   (isEmployee() && resource.data.status == 'published');
      allow create, update: if isAdmin();
      allow delete: if isAdmin();
    }
    
    // Reglas para la colección de empleados
    match /employees/{employeeId} {
      // Administradores pueden hacer todo
      // Coordinadores pueden leer y actualizar empleados de su departamento
      allow read: if isAdmin() || 
                   (isCoordinator() && resource.data.departmentId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.departments);
      allow create: if isAdmin();
      allow update: if isAdmin() || 
                     (isCoordinator() && resource.data.departmentId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.departments);
      allow delete: if isAdmin();
    }
    
    // Reglas para la colección de confirmaciones
    match /confirmations/{confirmationId} {
      // Administradores pueden hacer todo
      // Coordinadores pueden leer y crear/actualizar confirmaciones de su departamento
      // Empleados pueden leer sus propias confirmaciones
      allow read: if isAdmin() || 
                   (isCoordinator() && resource.data.departmentId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.departments) ||
                   (isEmployee() && resource.data.employeeId == request.auth.uid);
      allow create, update: if isAdmin() || 
                             (isCoordinator() && request.resource.data.departmentId in get(/databases/$(database)/documents/users/$(request.auth.uid)).data.departments);
      allow delete: if isAdmin();
    }
  }
}
